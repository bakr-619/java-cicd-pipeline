name: Java CI/CD Pipeline

on:
  push:
    branches: ["feature/*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests=false

      - name: Run Unit Tests
        run: mvn test

      - name: Build Docker Image
        run: docker build -t myapp:${{ github.sha }} .

  staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
      - name: Run Unit Tests
        run: mvn test
      - name: Build Docker Image
        run: docker build -t mydockerhubuser/myapp:staging .
      - name: Push to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push mydockerhubuser/myapp:staging

  production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - uses: actions/checkout@v3
      - name: Run Unit Tests
        run: mvn test
      - name: Build Docker Image
        run: docker build -t mydockerhubuser/myapp:prod .
      - name: Push to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push mydockerhubuser/myapp:prod
      - name: Deploy to Production
        run: |
          docker run -d -p 8080:8080 mydockerhubuser/myapp:prod
      - name: Smoke Test
        run: curl --fail http://localhost:8080 || exit 1
      - name: Rollback on Failure
        if: failure()
        run: |
          echo "Deployment failed. Rolling back..."
          docker pull mydockerhubuser/myapp:stable
          docker run -d -p 8080:8080 mydockerhubuser/myapp:stable
